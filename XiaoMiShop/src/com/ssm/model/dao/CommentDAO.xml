<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.model.dao.CommentDAO">
    <!-- 获取商品详情ID -->
    <select id="getGoodsDetailIdByOrderItemId" parameterType="int" resultType="int">
        select goods_detail_id from order_item where order_item_id = #{order_item_id}
    </select>
    <!-- 获取商品信息 -->
    <select id="getCommentGoods" parameterType="int" resultMap="GoodsDetailMap">
        select * from goods_detail inner join goods on goods_detail.goods_id=goods.goods_id
          where goods_detail_id=#{goods_detail_id}
    </select>

    <resultMap type="GoodsDetail" id="GoodsDetailMap">
        <result property="goods_detail_id" column="goods_detail_id"/>
        <result property="goods_id" column="goods_id"/>
        <result property="kind" column="kind"/>
        <result property="color" column="color"/>
        <result property="prime_price" column="prime_price"/>
        <result property="discount_price" column="discount_price"/>
        <result property="stock" column="stock"/>
        <association property="goods"  javaType="Goods">
            <result property="goods_id" column="goods_id"/>
            <result property="goods_category_id" column="goods_category_id"/>
            <result property="goods_code" column="goods_code"/>
            <result property="goods_name" column="goods_name"/>
            <result property="video_set_url" column="video_set_url"/>
            <result property="goods_pic_url" column="goods_pic_url"/>
        </association>
    </resultMap>



    <!-- 获取商品评论 -->
    <select id="getGoodsComment" parameterType="int" resultMap="commentMap">
        select *,cr.user_email reply_user from goods_comment gc
            left join comment_reply cr on gc.goods_comment_id = cr.goods_comment_id
            left join comment_picture cp on gc.goods_comment_id = cp.goods_comment_id
        where gc.goods_id=#{goods_id} and gc.goods_comment_status=0
    </select>
    <resultMap id="commentMap" type="GoodsComment">
        <result column="goods_comment_id" property="goods_comment_id"/>
        <result column="user_email" property="user_email"/>
        <result column="goods_id" property="goods_id"/>
        <result column="comment" property="comment"/>
        <result column="comment_date" property="comment_date"/>
        <result column="comment_level" property="comment_level"/>
        <result column="like_num" property="like_num"/>
        <collection property="commentReplyList" ofType="CommentReply">
            <result column="comment_reply_id" property="comment_reply_id"/>
            <result column="reply_user" property="user_email"/>
            <result column="reply" property="reply"/>
            <result column="reply_date" property="reply_date"/>
            <result column="reply_type" property="reply_type"/>
            <result column="reply_like_num" property="reply_like_num"/>
        </collection>
        <collection property="commentPictureList" ofType="CommentPicture">
            <result column="comment_picture_id" property="comment_picture_id"/>
            <result column="picture_url" property="picture_url"/>
        </collection>
    </resultMap>

    <!-- 获取评论用户 -->
    <select id="getCommentUser" parameterType="String" resultType="User">
        select * from user where user_email = #{user_email}
    </select>

    <!-- 插入评论回复 -->
    <insert id="insetCommentReply" parameterType="CommentReply">
        insert into comment_reply (goods_comment_id, user_email, reply, reply_date) values
            (#{goods_comment_id},#{user_email},#{reply},#{reply_date})
    </insert>

    <!-- 更新评论点赞数量 -->
    <update id="updateCommentLikeNum" parameterType="GoodsComment">
        update goods_comment set like_num = #{like_num} where goods_comment_id=#{goods_comment_id}
    </update>

    <!-- 更新评论回复点赞数量 -->
    <update id="updateReplyLikeNum" parameterType="CommentReply">
        update comment_reply set reply_like_num = #{reply_like_num} where comment_reply_id=#{comment_reply_id}
    </update>

    <!-- 通过评论ID获取评论 -->
    <select id="getCommentById" parameterType="int" resultMap="commentMap">
        select *,cr.user_email reply_user from goods_comment gc
            left join comment_reply cr on gc.goods_comment_id = cr.goods_comment_id
            left join comment_picture cp on gc.goods_comment_id = cp.goods_comment_id
        where gc.goods_comment_id=#{goods_comment_id} and gc.goods_comment_status=0
    </select>

    <!-- 插入商品评价 -->
    <insert id="insertGoodsComment" parameterType="GoodsComment">
        <selectKey resultType="java.lang.Integer"  keyProperty="goods_comment_id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into goods_comment (user_email, goods_id, `comment`, comment_date, comment_level)
        values (#{user_email},#{goods_id},#{comment},#{comment_date},#{comment_level})
    </insert>


    <!-- 插入评价图片 -->
    <insert id="insertCommentPictrue" parameterType="GoodsComment">
        insert into comment_picture (goods_comment_id, picture_url)VALUES
        <foreach collection="commentPictureList" item="commentPicture"  separator=",">
            (#{goods_comment_id},#{commentPicture.picture_url})
        </foreach>
    </insert>

    <!-- 更新评论状态 -->
    <update id="updateCommentFlag" parameterType="int">
        update order_item set comment_flag = 1 where order_item_id = #{order_item_id}
    </update>

</mapper>